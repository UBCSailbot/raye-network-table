pipeline {
    options {
        // Keep only 20 builds, then start deleting them
        // (I don't have that much disk space)
        buildDiscarder(logRotator(numToKeepStr:'20'))
    }

    agent none

    stages {
        // This dummy stage is needed to apply
        // a lock over all the stages.
        // Without this, the build fails when
        // multiple builds are launched.
        // https://issues.jenkins-ci.org/browse/JENKINS-43336
        stage('Wait for other jobs to complete') {
            options {
                lock('can_bbb_nuc')
            }
            agent none
            stages {
                stage('Compile BBB') {
                    agent {
                        label 'bbb'
                    }
                    steps {
                        // Make sure canbus is enabled
                        dir("/home/debian/workspace/can_bbb_nuc_integration/") {
                            checkout scm
                            // TODO: Should run make clean here, but the BBB
                            // is soo slow
                            //
                            // Also the WELCOME_DIRECTORY needs to be escaped a bunch of times:
                            // once for the jenkins file, and then another time
                            // when its called from cmake. When it finally
                            // ends up in the C++, it should be in the form
                            // #define WELCOME_DIRECTORY "/tmp/can_bbb_nuc_integration/"
                            // the number of backslashes to use I found out using trial
                            // and error :(
                            sh '''
                                mkdir -p build
                                cd build
                                cmake .. -DWELCOME_DIRECTORY="\\\"/tmp/can_bbb_nuc_integration/\\\""
                                make
                            '''
                        }
                    }
                }

                stage('Compile NUC') {
                    agent {
                        label 'nuc'
                    }
                    steps {
                        // compile network table.
                        // specifically we want nuc_eth_listener
                        dir('/home/raye/workspace/can_bbb_nuc_integration') {
                            checkout scm
                            // We're not running network_table_server here,
                            // so we don't need the WELCOME_DIRECTORY flag
                            sh '''
                                set +x
                                source /opt/ros/melodic/setup.bash
                                mkdir -p build
                                cd build
                                cmake .. -DENABLE_ROS:BOOL=ON
                                make clean
                                make -j6
                            '''
                        }

                        // compile bruces controller code.
                        // TODO: This is not handled by git/jenkins at all. Changes
                        // to this code will not appear here.
                        dir('/home/raye/catkin_ws') {
                            sh '''
                                set +x
                                source /opt/ros/melodic/setup.bash
                                catkin_make clean
                                catkin_make
                            '''
                        }
                    }
                }

                stage('Run BBB') {
                    agent {
                        label 'bbb'
                    }
                    steps {
                        catchError(stageResult: 'FAILURE') {
                            sh '/usr/sbin/daemonize -E JENKINS_NODE_COOKIE=network_table_server /home/debian/workspace/can_bbb_nuc_integration/build/bin/network_table_server'
                            sh '/usr/sbin/daemonize -E JENKINS_NODE_COOKIE=bbb_eth_listener /home/debian/workspace/can_bbb_nuc_integration/build/bin/bbb_eth_listener 192.168.1.82 5555'
                            sh '/usr/sbin/daemonize -E JENKINS_NODE_COOKIE=bbb_canbus_listener /home/debian/workspace/can_bbb_nuc_integration/build/bin/bbb_canbus_listener vcan0'
                        }
                    }
                }

                stage('Run NUC') {
                    agent {
                        label 'nuc'
                    }
                    steps {
                        catchError(stageResult: 'FAILURE') {
                            sh '''
                                set +x
                                source /opt/ros/melodic/setup.bash
                                daemonize -E JENKINS_NODE_COOKIE=roscore_jenkins /opt/ros/melodic/bin/roscore
                            '''
                            sh '''
                                set +x
                                source /opt/ros/melodic/setup.bash
                                daemonize -E JENKINS_NODE_COOKIE=nuc_eth_listener_jenkins /home/raye/workspace/can_bbb_nuc_integration/build/bin/nuc_eth_listener 192.168.1.82 5555
                            '''
                            sh '''
                                set +x
                                source /opt/ros/melodic/setup.bash
                                source /home/raye/catkin_ws/devel/setup.sh
                                daemonize -E JENKINS_NODE_COOKIE=ros_communication_node /opt/ros/melodic/bin/rosrun raye_communication raye_communication_node
                            '''
                        }
                    }
                }

                stage ('Run BBB tests') {
                    agent {
                        label 'bbb'
                    }
                    steps {
                        catchError(stageResult: 'FAILURE') {
                            sh '/usr/sbin/daemonize -E JENKINS_NODE_COOKIE=mock_sensors /home/debian/workspace/can_bbb_nuc_integration/scripts/mock_sensors.py -c vcan0 -f recorded_data/mock_can_data.csv --loop'
                            sh '/home/debian/workspace/can_bbb_nuc_integration/scripts/canbus_data_checker.py -c vcan0'
                        }
                    }
                }
                stage ('Cleanup') {
                    steps {
                        cleanup()
                    }
                }
            }
        }
    }
}

def cleanup() {
    // Cleanup processes on BBB
    node('bbb') {
        script {
            sh 'pkill -f network_table_server'
            sh 'pkill -f bbb_eth_listener'
            sh 'pkill -f bbb_canbus_listener'
            sh 'pkill -f mock_sensors'
            sh 'rm -r /tmp/can_bbb_nuc_integration/'
        }
    }
    // Cleanup processes on NUC
    node('nuc') {
        script {
            sh 'pkill -f roscore'
            sh 'pkill -f nuc_eth_listener'
            sh 'pkill -f raye_communication_node'
        }
    }
}
